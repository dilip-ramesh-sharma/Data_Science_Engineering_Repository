/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UI.Customer;

import BookDetails.Author;
import BookDetails.Genre;
import Employee.Employee;
import Employee.EmployeeDirectory;
import Library.Library;
import Material.Book;
import Material.BookDirectory;
import Material.Magazine;
import Rental.Rent;
import Role.LibrarianRole;
import Role.Role;
import Role.SystemAdminRole;
import System.ApplicationSystem;
import System.Branch;
import System.UserAccount;
import System.UserAccountDirectory;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91730
 */
public class RentMagazineJPanel extends javax.swing.JPanel {

    private ApplicationSystem applicationsystem;
    private Branch branch;
    private UserAccount useraccount;
    DefaultTableModel viewTableModel;

    
    public RentMagazineJPanel() {
        initComponents();

    }

    public RentMagazineJPanel(ApplicationSystem applicationsystem, Branch branch, UserAccount useraccount) {
        initComponents();
        this.viewTableModel = (DefaultTableModel) tableBookTable.getModel();  
        this.applicationsystem = applicationsystem;
        this.branch = branch;
        this.useraccount = useraccount;
        displayLocationDp();
  

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboLocation = new javax.swing.JComboBox<>();
        btnRent = new javax.swing.JButton();
        btnViewRentMagazine = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBookTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setForeground(new java.awt.Color(255, 51, 51));
        jLabel12.setText("RENT  MAGAZINE");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 280, -1));

        jLabel2.setText("SELECT LOCATION");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 100, 20));

        comboLocation.setBorder(null);
        comboLocation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboLocationItemStateChanged(evt);
            }
        });
        comboLocation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboLocationKeyPressed(evt);
            }
        });
        add(comboLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, 150, 30));

        btnRent.setText("RENT");
        btnRent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRentActionPerformed(evt);
            }
        });
        add(btnRent, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 270, 90, 20));

        btnViewRentMagazine.setText("VIEW");
        btnViewRentMagazine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewRentMagazineActionPerformed(evt);
            }
        });
        add(btnViewRentMagazine, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, 70, 20));

        tableBookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company Name", "issue type", "Date", "Available", "Rent Price", "Rent Duration", "Serial Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Long.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableBookTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 770, 190));
    }// </editor-fold>//GEN-END:initComponents

    private void comboLocationKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboLocationKeyPressed
        // TODO add your handling code here:
       
        
        
        
    }//GEN-LAST:event_comboLocationKeyPressed

    private void comboLocationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboLocationItemStateChanged
        // TODO add your handling code here:
         
    }//GEN-LAST:event_comboLocationItemStateChanged

    private void btnViewRentMagazineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewRentMagazineActionPerformed
        // TODO add your handling code here:
         String location = (String) comboLocation.getSelectedItem();
        displayBookTableDetails(location);
    }//GEN-LAST:event_btnViewRentMagazineActionPerformed

    private void btnRentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRentActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableBookTable.getSelectedRow();
        if(selectedRow >= 0 ){
            String selectSerialNumber = tableBookTable.getValueAt(selectedRow, 10).toString();
            Library lib = this.branch.getLib();
             ArrayList<Magazine> magList = lib.getGeneralList().getMagazineCollection();
             //update rent with requested
              for(int i =0;i< magList.size();i++ ){
                  long serialNumber = magList.get(i).getRt().getSerialNumber();
                  
               if( serialNumber == Long.valueOf(selectSerialNumber)  )
               {
                   Magazine bk= magList.get(i);
                  Rent rt = bk.getRt();
                  rt.setBookRequested("SENT");
                  bk.setRt(rt);
                  this.applicationsystem.UpdateMagazineToBranch(magList.get(i).getLocation(),bk);
                  this.applicationsystem.getCustomerList().updateCustomer(this.useraccount.getAccountId(), rt);
                  break;
               }
               
              }
               JOptionPane.showMessageDialog(null, "Rent Request Sent to Librarian");
              
        }
        
    }//GEN-LAST:event_btnRentActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRent;
    private javax.swing.JButton btnViewRentMagazine;
    private javax.swing.JComboBox<String> comboLocation;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableBookTable;
    // End of variables declaration//GEN-END:variables





    private void displayLocationDp() {
            comboLocation.removeAllItems();
         ArrayList<String> br = this.applicationsystem.getBranchName();
        for (int i = 0; i < br.size(); i++)
        {
            comboLocation.addItem(br.get(i));
        }
        
    }
    
  

    private void displayBookTableDetails(String location) {
        
        System.out.println("Display book details in customer ");
        
        viewTableModel.setRowCount(0);
        Library lib = this.branch.getLib();
        ArrayList<Magazine> maglist = lib.getGeneralList().getMagazineCollection();
        
          for(int i =0;i< maglist.size();i++ ){
              Object row[] = new Object[11];
              
               if(maglist.get(i).getLocation().equals(location) && maglist.get(i).getIsAvailableFlag()!= false)
               {
                   System.out.println("Inside display book function");
                     row[0] = maglist.get(i).getMaterialName();
                     row[1] = maglist.get(i).getIssueType();
                     row[2] = String.valueOf(maglist.get(i).getRegisteredDate());
                     row[3] = maglist.get(i).getIsAvailableFlag();
                     row[4] = maglist.get(i).getRt().getRentPrice();
                     row[5] = maglist.get(i).getRt().getRentDuration();
                     row[6] = maglist.get(i).getRt().getSerialNumber();
                    
                    viewTableModel.addRow(row);
               }
               
              
                  
             
              }    
          }
    }